[tool.poetry]
name = 'coupledmodeldriver'
version = '0.0.0'
description = 'coupled model configuration generation'
authors = [
    'Zach Burnett <zachary.r.burnett@gmail.com>',
    'Soroosh Mani <soroosh.mani@noaa.gov>',
    ]
license = 'CC0-1.0'
readme = 'README.md'
repository = 'https://github.com/noaa-ocs-modeling/CoupledModelDriver.git'
documentation = 'https://coupledmodeldriver.readthedocs.io'

[build-system]
requires = [
    'poetry-core>=1.0.0',
    'poetry-dynamic-versioning',
]
build-backend = 'poetry.core.masonry.api'

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry.dependencies]
python = '>=3.8,<3.12'
adcircpy = { version = '>=1.3', optional = true }  # effectively disable until new version released
dunamai = { version = '*', optional = true }
file-read-backwards = '*'
fiona = '*'  # improper upstream dependency setup
nemspy = '>=1.0.4'
numpy = '*'
pyproj = '*'
stormevents = '>=2.3.2' # tests results based on speed fix
typepigeon = '^1.0.3'
isort = { version = '*', optional = true }
oitnb = { version = '*', optional = true }
pooch = { version = '*', optional = true }
pyschism = '>0.1.13'
pytest = { version = '*', optional = true }
pytest-cov = { version = '*', optional = true }
pytest-socket = { version = '*', optional = true }
pytest-xdist = { version = '*', optional = true }
m2r2 = { version = '*', optional = true }
sphinx = { version = '*', optional = true }
sphinx-rtd-theme = { version = '*', optional = true }
sphinxcontrib-programoutput = { version = '*', optional = true }

[tool.poetry.extras]
testing = ['pooch', 'pytest', 'pytest-cov', 'pytest-socket', 'pytest-xdist', 'wget']
development = ['isort', 'oitnb']
documentation = ['dunamai', 'm2r2', 'sphinx', 'sphinx-rtd-theme', 'sphinxcontrib-programoutput']
adcirc = ['adcircpy']

[tool.poetry.scripts]
initialize_adcirc = 'coupledmodeldriver.client.initialize_adcirc:main'
generate_adcirc = 'coupledmodeldriver.client.generate_adcirc:main'
initialize_schism = 'coupledmodeldriver.client.initialize_schism:main'
generate_schism = 'coupledmodeldriver.client.generate_schism:main'
check_completion = 'coupledmodeldriver.client.check_completion:main'
unqueued_runs = 'coupledmodeldriver.client.unqueued_runs:main'
